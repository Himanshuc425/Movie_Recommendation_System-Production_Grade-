apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-training
  labels:
    app: model-training
spec:
  replicas: 1
  selector:
    matchLabels:
      app: model-training
  template:
    metadata:
      labels:
        app: model-training
    spec:
      containers:
      - name: model-training
        image: ${DOCKER_REGISTRY}/model-training:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: api
        - containerPort: 8000
          name: metrics
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: PROCESSED_DATA_TOPIC
          value: "processed-data"
        - name: MODEL_READY_TOPIC
          value: "model-ready"
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow:5000"
        - name: MLFLOW_EXPERIMENT_NAME
          value: "recommendation-models"
        resources:
          limits:
            cpu: "2000m"
            memory: "4Gi"
          requests:
            cpu: "1000m"
            memory: "2Gi"
        volumeMounts:
        - name: models-volume
          mountPath: /models
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: model-training
  labels:
    app: model-training
spec:
  selector:
    app: model-training
  ports:
  - port: 8080
    targetPort: 8080
    name: api
  - port: 8000
    targetPort: 8000
    name: metrics
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard