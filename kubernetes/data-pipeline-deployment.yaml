apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-pipeline
  labels:
    app: data-pipeline
spec:
  replicas: 2
  selector:
    matchLabels:
      app: data-pipeline
  template:
    metadata:
      labels:
        app: data-pipeline
    spec:
      containers:
      - name: data-pipeline
        image: ${DOCKER_REGISTRY}/data-pipeline:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: api
        - containerPort: 8000
          name: metrics
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "kafka:9092"
        - name: RAW_DATA_TOPIC
          value: "raw-data"
        - name: PROCESSED_DATA_TOPIC
          value: "processed-data"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: data-pipeline
  labels:
    app: data-pipeline
spec:
  selector:
    app: data-pipeline
  ports:
  - port: 8080
    targetPort: 8080
    name: api
  - port: 8000
    targetPort: 8000
    name: metrics
  type: ClusterIP